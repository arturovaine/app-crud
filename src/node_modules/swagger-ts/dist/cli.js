#!/usr/bin/env node
"use strict";
const metadataGenerator_1 = require('./metadataGeneration/metadataGenerator');
const specGenerator_1 = require('./swagger/specGenerator');
const routeGenerator_1 = require('./routeGeneration/routeGenerator');
const yargs = require('yargs');
(function runGenerator() {
    const argv = yargs.argv;
    const swaggerDir = argv.swaggerDir;
    if (!swaggerDir) {
        throw new Error('Must provide --swaggerDir argument, e.g. --swaggerDir=./dist');
    }
    const entryFile = argv.entryFile;
    if (!entryFile) {
        throw new Error('Must provide --entryFile argument, e.g. --entryFile=./src/server.ts');
    }
    const routesDir = argv.routesDir;
    if (!routesDir) {
        throw new Error('Must provide --routesDir argument, e.g. --routesDir=./dist');
    }
    const metadata = new metadataGenerator_1.MetadataGenerator().Generate(entryFile);
    new specGenerator_1.SpecGenerator(metadata).GenerateJson(swaggerDir);
    new routeGenerator_1.RouteGenerator(metadata, routesDir).GenerateExpressRoutes();
})();
//# sourceMappingURL=cli.js.map