/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


export interface IUser {
    id?: number;
    username?: string;
    firstName?: string;
    lastName?: string;
    email?: string;
    password?: string;
    phone?: string;
    userStatus?: number;
}


export class User extends BaseModel implements IUser  {

    static ID_FIELD_NAME = 'id';
    static USERNAME_FIELD_NAME = 'username';
    static FIRST_NAME_FIELD_NAME = 'firstName';
    static LAST_NAME_FIELD_NAME = 'lastName';
    static EMAIL_FIELD_NAME = 'email';
    static PASSWORD_FIELD_NAME = 'password';
    static PHONE_FIELD_NAME = 'phone';
    static USER_STATUS_FIELD_NAME = 'userStatus';

    id: number;
    username: string;
    firstName: string;
    lastName: string;
    email: string;
    password: string;
    phone: string;
    /** User Status */
    userStatus: number;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    
    */
    constructor(values?: Partial<IUser>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IUser>): void {
        if (values) {
            const rawValues = values
            this.id = this.getValue<number>(rawValues, User.ID_FIELD_NAME);
            this.username = this.getValue<string>(rawValues, User.USERNAME_FIELD_NAME);
            this.firstName = this.getValue<string>(rawValues, User.FIRST_NAME_FIELD_NAME);
            this.lastName = this.getValue<string>(rawValues, User.LAST_NAME_FIELD_NAME);
            this.email = this.getValue<string>(rawValues, User.EMAIL_FIELD_NAME);
            this.password = this.getValue<string>(rawValues, User.PASSWORD_FIELD_NAME);
            this.phone = this.getValue<string>(rawValues, User.PHONE_FIELD_NAME);
            this.userStatus = this.getValue<number>(rawValues, User.USER_STATUS_FIELD_NAME);
        }
    }

}
