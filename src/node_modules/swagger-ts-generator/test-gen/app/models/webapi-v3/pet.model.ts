/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { ICategory, Category } from './category.model';
import { ITag, Tag } from './tag.model';
import { status } from './enums';

export interface IPet {
    id?: number;
    name: string;
    category?: ICategory;
    photoUrls: Array<string>;
    tags?: Array<ITag>;
    status?: status;
}


export class Pet extends BaseModel implements IPet  {

    static ID_FIELD_NAME = 'id';
    static NAME_FIELD_NAME = 'name';
    static CATEGORY_FIELD_NAME = 'category';
    static PHOTO_URLS_FIELD_NAME = 'photoUrls';
    static TAGS_FIELD_NAME = 'tags';
    static STATUS_FIELD_NAME = 'status';

    id: number;
    name: string;
    category: Category;
    photoUrls: Array<string>;
    tags: Array<Tag>;
    /** pet status in the store */
    status: status;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    
    */
    constructor(values?: Partial<IPet>) {
        super();
        this.category = new Category(); 
        this.photoUrls = new Array<string>(); 
        this.tags = new Array<Tag>(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IPet>): void {
        if (values) {
            const rawValues = values
            this.id = this.getValue<number>(rawValues, Pet.ID_FIELD_NAME);
            this.name = this.getValue<string>(rawValues, Pet.NAME_FIELD_NAME);
            this.category.setValues(rawValues.category);
            this.fillModelArray<string>(this, Pet.PHOTO_URLS_FIELD_NAME, rawValues.photoUrls);
            this.fillModelArray<ITag>(this, Pet.TAGS_FIELD_NAME, rawValues.tags, Tag, SubTypeFactory.createSubTypeInstance);
            this.status = this.getValue<status>(rawValues, Pet.STATUS_FIELD_NAME);
        }
    }

}
