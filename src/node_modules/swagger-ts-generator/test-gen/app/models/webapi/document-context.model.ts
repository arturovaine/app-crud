/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { ISoftReference, SoftReference } from './soft-reference.model';

export interface IDocumentContext {
    accessContextRef?: ISoftReference;
    docContextRef?: ISoftReference;
    docRef?: ISoftReference;
    fileRef?: ISoftReference;
    requesterRef?: ISoftReference;
}


export class DocumentContext extends BaseModel implements IDocumentContext  {

    static ACCESS_CONTEXT_REF_FIELD_NAME = 'accessContextRef';
    static DOC_CONTEXT_REF_FIELD_NAME = 'docContextRef';
    static DOC_REF_FIELD_NAME = 'docRef';
    static FILE_REF_FIELD_NAME = 'fileRef';
    static REQUESTER_REF_FIELD_NAME = 'requesterRef';

    accessContextRef: SoftReference;
    docContextRef: SoftReference;
    docRef: SoftReference;
    fileRef: SoftReference;
    requesterRef: SoftReference;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IDocumentContext>) {
        super();
        this.accessContextRef = new SoftReference(); 
        this.docContextRef = new SoftReference(); 
        this.docRef = new SoftReference(); 
        this.fileRef = new SoftReference(); 
        this.requesterRef = new SoftReference(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IDocumentContext>): void {
        if (values) {
            
            const rawValues = values
            this.accessContextRef.setValues(rawValues.accessContextRef);
            this.docContextRef.setValues(rawValues.docContextRef);
            this.docRef.setValues(rawValues.docRef);
            this.fileRef.setValues(rawValues.fileRef);
            this.requesterRef.setValues(rawValues.requesterRef);
        }
    }
}
