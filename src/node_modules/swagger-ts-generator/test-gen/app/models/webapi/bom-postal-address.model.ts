/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { BomCountry } from './enums';

export interface IBomPostalAddress {
    city?: string;
    co?: string;
    country: BomCountry;
    fao?: string;
    postCode: string;
    street?: string;
    subdivision?: string;
}


export class BomPostalAddress extends BaseModel implements IBomPostalAddress  {

    static CITY_FIELD_NAME = 'city';
    static CO_FIELD_NAME = 'co';
    static COUNTRY_FIELD_NAME = 'country';
    static FAO_FIELD_NAME = 'fao';
    static POST_CODE_FIELD_NAME = 'postCode';
    static STREET_FIELD_NAME = 'street';
    static SUBDIVISION_FIELD_NAME = 'subdivision';

    city: string;
    co: string;
    country: BomCountry;
    fao: string;
    postCode: string;
    street: string;
    subdivision: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IBomPostalAddress>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IBomPostalAddress>): void {
        if (values) {
            
            const rawValues = values
            this.city = this.getValue<string>(rawValues, BomPostalAddress.CITY_FIELD_NAME);
            this.co = this.getValue<string>(rawValues, BomPostalAddress.CO_FIELD_NAME);
            this.country = this.getValue<BomCountry>(rawValues, BomPostalAddress.COUNTRY_FIELD_NAME);
            this.fao = this.getValue<string>(rawValues, BomPostalAddress.FAO_FIELD_NAME);
            this.postCode = this.getValue<string>(rawValues, BomPostalAddress.POST_CODE_FIELD_NAME);
            this.street = this.getValue<string>(rawValues, BomPostalAddress.STREET_FIELD_NAME);
            this.subdivision = this.getValue<string>(rawValues, BomPostalAddress.SUBDIVISION_FIELD_NAME);
        }
    }
}
