/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { ILimit, Limit } from './limit.model';
import { IRiskType, RiskType } from './risk-type.model';

export interface IPerRiskLimit extends ILimit{
    riskTypes?: Array<IRiskType>;
}


export class PerRiskLimit extends Limit implements IPerRiskLimit  {
    static TYPE_SELECTOR = 'PerRiskLimit';

    static RISK_TYPES_FIELD_NAME = 'riskTypes';

    riskTypes: Array<RiskType>;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IPerRiskLimit>) {
        super();

        this.typeSelector = PerRiskLimit.TYPE_SELECTOR;
        this.riskTypes = new Array<RiskType>(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IPerRiskLimit>): void {
        if (values) {
            super.setValues(values)
            const rawValues = values
            this.fillModelArray<IRiskType>(this, PerRiskLimit.RISK_TYPES_FIELD_NAME, rawValues.riskTypes, RiskType, SubTypeFactory.createSubTypeInstance);
        }
    }
}
