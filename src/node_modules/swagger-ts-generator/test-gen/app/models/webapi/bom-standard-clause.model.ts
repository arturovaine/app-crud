/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { ClauseType } from './enums';

export interface IBomStandardClause {
    createdAt?: Date;
    description: string;
    id?: string;
    lastModifiedAt?: Date;
    name: string;
    number?: number;
    type?: ClauseType;
}


export class BomStandardClause extends BaseModel implements IBomStandardClause  {

    static CREATED_AT_FIELD_NAME = 'createdAt';
    static DESCRIPTION_FIELD_NAME = 'description';
    static ID_FIELD_NAME = 'id';
    static LAST_MODIFIED_AT_FIELD_NAME = 'lastModifiedAt';
    static NAME_FIELD_NAME = 'name';
    static NUMBER_FIELD_NAME = 'number';
    static TYPE_FIELD_NAME = 'type';

    createdAt: Date;
    description: string;
    id: string;
    lastModifiedAt: Date;
    name: string;
    number: number;
    type: ClauseType;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IBomStandardClause>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IBomStandardClause>): void {
        if (values) {
            
            const rawValues = values
            this.createdAt = this.getValue<Date>(rawValues, BomStandardClause.CREATED_AT_FIELD_NAME);
            this.description = this.getValue<string>(rawValues, BomStandardClause.DESCRIPTION_FIELD_NAME);
            this.id = this.getValue<string>(rawValues, BomStandardClause.ID_FIELD_NAME);
            this.lastModifiedAt = this.getValue<Date>(rawValues, BomStandardClause.LAST_MODIFIED_AT_FIELD_NAME);
            this.name = this.getValue<string>(rawValues, BomStandardClause.NAME_FIELD_NAME);
            this.number = this.getValue<number>(rawValues, BomStandardClause.NUMBER_FIELD_NAME);
            this.type = this.getValue<ClauseType>(rawValues, BomStandardClause.TYPE_FIELD_NAME);
        }
    }
}
