/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


export interface IBomX500Name {
    commonName?: string;
    country: string;
    locality: string;
    organisation: string;
    organisationUnit?: string;
    state?: string;
}


export class BomX500Name extends BaseModel implements IBomX500Name  {

    static COMMON_NAME_FIELD_NAME = 'commonName';
    static COUNTRY_FIELD_NAME = 'country';
    static LOCALITY_FIELD_NAME = 'locality';
    static ORGANISATION_FIELD_NAME = 'organisation';
    static ORGANISATION_UNIT_FIELD_NAME = 'organisationUnit';
    static STATE_FIELD_NAME = 'state';

    commonName: string;
    country: string;
    locality: string;
    organisation: string;
    organisationUnit: string;
    state: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IBomX500Name>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IBomX500Name>): void {
        if (values) {
            
            const rawValues = values
            this.commonName = this.getValue<string>(rawValues, BomX500Name.COMMON_NAME_FIELD_NAME);
            this.country = this.getValue<string>(rawValues, BomX500Name.COUNTRY_FIELD_NAME);
            this.locality = this.getValue<string>(rawValues, BomX500Name.LOCALITY_FIELD_NAME);
            this.organisation = this.getValue<string>(rawValues, BomX500Name.ORGANISATION_FIELD_NAME);
            this.organisationUnit = this.getValue<string>(rawValues, BomX500Name.ORGANISATION_UNIT_FIELD_NAME);
            this.state = this.getValue<string>(rawValues, BomX500Name.STATE_FIELD_NAME);
        }
    }
}
