/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IBomCommissionTableEntry, BomCommissionTableEntry } from './bom-commission-table-entry.model';

export interface IBomSlidingScaleCommission {
    entryTable?: Array<IBomCommissionTableEntry>;
    lossAdjustmentExpensesPercentage?: string;
    profitCommissionPercentage?: string;
    provisionalCommissionPercentage?: string;
}


export class BomSlidingScaleCommission extends BaseModel implements IBomSlidingScaleCommission  {

    static ENTRY_TABLE_FIELD_NAME = 'entryTable';
    static LOSS_ADJUSTMENT_EXPENSES_PERCENTAGE_FIELD_NAME = 'lossAdjustmentExpensesPercentage';
    static PROFIT_COMMISSION_PERCENTAGE_FIELD_NAME = 'profitCommissionPercentage';
    static PROVISIONAL_COMMISSION_PERCENTAGE_FIELD_NAME = 'provisionalCommissionPercentage';

    entryTable: Array<BomCommissionTableEntry>;
    lossAdjustmentExpensesPercentage: string;
    profitCommissionPercentage: string;
    provisionalCommissionPercentage: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IBomSlidingScaleCommission>) {
        super();
        this.entryTable = new Array<BomCommissionTableEntry>(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IBomSlidingScaleCommission>): void {
        if (values) {
            
            const rawValues = values
            this.fillModelArray<IBomCommissionTableEntry>(this, BomSlidingScaleCommission.ENTRY_TABLE_FIELD_NAME, rawValues.entryTable, BomCommissionTableEntry, SubTypeFactory.createSubTypeInstance);
            this.lossAdjustmentExpensesPercentage = this.getValue<string>(rawValues, BomSlidingScaleCommission.LOSS_ADJUSTMENT_EXPENSES_PERCENTAGE_FIELD_NAME);
            this.profitCommissionPercentage = this.getValue<string>(rawValues, BomSlidingScaleCommission.PROFIT_COMMISSION_PERCENTAGE_FIELD_NAME);
            this.provisionalCommissionPercentage = this.getValue<string>(rawValues, BomSlidingScaleCommission.PROVISIONAL_COMMISSION_PERCENTAGE_FIELD_NAME);
        }
    }
}
