/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IInterest, Interest } from './interest.model';
import { IRiskType, RiskType } from './risk-type.model';
import { BomClassOfBusiness } from './enums';

export interface IBomReinsuranceCoverage {
    classesOfBusiness?: Array<BomClassOfBusiness>;
    interests?: Array<IInterest>;
    perils?: Array<string>;
    regions?: Array<string>;
    scopesOfCoverage?: Array<IRiskType>;
}


export class BomReinsuranceCoverage extends BaseModel implements IBomReinsuranceCoverage  {

    static CLASSES_OF_BUSINESS_FIELD_NAME = 'classesOfBusiness';
    static INTERESTS_FIELD_NAME = 'interests';
    static PERILS_FIELD_NAME = 'perils';
    static REGIONS_FIELD_NAME = 'regions';
    static SCOPES_OF_COVERAGE_FIELD_NAME = 'scopesOfCoverage';

    classesOfBusiness: Array<BomClassOfBusiness>;
    interests: Array<Interest>;
    perils: Array<string>;
    regions: Array<string>;
    scopesOfCoverage: Array<RiskType>;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IBomReinsuranceCoverage>) {
        super();
        this.classesOfBusiness = new Array<BomClassOfBusiness>(); 
        this.interests = new Array<Interest>(); 
        this.perils = new Array<string>(); 
        this.regions = new Array<string>(); 
        this.scopesOfCoverage = new Array<RiskType>(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IBomReinsuranceCoverage>): void {
        if (values) {
            
            const rawValues = values
            this.fillModelArray<BomClassOfBusiness>(this, BomReinsuranceCoverage.CLASSES_OF_BUSINESS_FIELD_NAME, rawValues.classesOfBusiness);
            this.fillModelArray<IInterest>(this, BomReinsuranceCoverage.INTERESTS_FIELD_NAME, rawValues.interests, Interest, SubTypeFactory.createSubTypeInstance);
            this.fillModelArray<string>(this, BomReinsuranceCoverage.PERILS_FIELD_NAME, rawValues.perils);
            this.fillModelArray<string>(this, BomReinsuranceCoverage.REGIONS_FIELD_NAME, rawValues.regions);
            this.fillModelArray<IRiskType>(this, BomReinsuranceCoverage.SCOPES_OF_COVERAGE_FIELD_NAME, rawValues.scopesOfCoverage, RiskType, SubTypeFactory.createSubTypeInstance);
        }
    }
}
