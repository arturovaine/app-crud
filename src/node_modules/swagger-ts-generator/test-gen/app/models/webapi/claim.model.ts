/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IClaimAmount, ClaimAmount } from './claim-amount.model';
import { ISoftReference, SoftReference } from './soft-reference.model';
import { IClaimant, Claimant } from './claimant.model';
import { IClaimee, Claimee } from './claimee.model';
import { ClaimAcceptanceStatus } from './enums';
import { TransactionStatus } from './enums';

export interface IClaim {
    acceptanceStatus?: ClaimAcceptanceStatus;
    accountId?: string;
    amounts?: Array<IClaimAmount>;
    assignedCoverageId?: string;
    contract?: ISoftReference;
    createdAt?: Date;
    hasHistory?: boolean;
    id?: string;
    loss?: ISoftReference;
    modifiedAt?: Date;
    partyRoleInClaim?: Array<IClaimant | IClaimee>;
    stateGroupId?: string;
    transactionStatus?: TransactionStatus;
    version?: number;
}


export class Claim extends BaseModel implements IClaim  {

    static ACCEPTANCE_STATUS_FIELD_NAME = 'acceptanceStatus';
    static ACCOUNT_ID_FIELD_NAME = 'accountId';
    static AMOUNTS_FIELD_NAME = 'amounts';
    static ASSIGNED_COVERAGE_ID_FIELD_NAME = 'assignedCoverageId';
    static CONTRACT_FIELD_NAME = 'contract';
    static CREATED_AT_FIELD_NAME = 'createdAt';
    static HAS_HISTORY_FIELD_NAME = 'hasHistory';
    static ID_FIELD_NAME = 'id';
    static LOSS_FIELD_NAME = 'loss';
    static MODIFIED_AT_FIELD_NAME = 'modifiedAt';
    static PARTY_ROLE_IN_CLAIM_FIELD_NAME = 'partyRoleInClaim';
    static STATE_GROUP_ID_FIELD_NAME = 'stateGroupId';
    static TRANSACTION_STATUS_FIELD_NAME = 'transactionStatus';
    static VERSION_FIELD_NAME = 'version';

    acceptanceStatus: ClaimAcceptanceStatus;
    accountId: string;
    amounts: Array<ClaimAmount>;
    assignedCoverageId: string;
    contract: SoftReference;
    createdAt: Date;
    hasHistory: boolean;
    id: string;
    loss: SoftReference;
    modifiedAt: Date;
    partyRoleInClaim: Array<Claimant | Claimee>;
    stateGroupId: string;
    transactionStatus: TransactionStatus;
    version: number;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IClaim>) {
        super();
        this.amounts = new Array<ClaimAmount>(); 
        this.contract = new SoftReference(); 
        this.loss = new SoftReference(); 
        this.partyRoleInClaim = new Array<Claimant | Claimee>(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IClaim>): void {
        if (values) {
            
            const rawValues = values
            this.acceptanceStatus = this.getValue<ClaimAcceptanceStatus>(rawValues, Claim.ACCEPTANCE_STATUS_FIELD_NAME);
            this.accountId = this.getValue<string>(rawValues, Claim.ACCOUNT_ID_FIELD_NAME);
            this.fillModelArray<IClaimAmount>(this, Claim.AMOUNTS_FIELD_NAME, rawValues.amounts, ClaimAmount, SubTypeFactory.createSubTypeInstance);
            this.assignedCoverageId = this.getValue<string>(rawValues, Claim.ASSIGNED_COVERAGE_ID_FIELD_NAME);
            this.contract.setValues(rawValues.contract);
            this.createdAt = this.getValue<Date>(rawValues, Claim.CREATED_AT_FIELD_NAME);
            this.hasHistory = this.getValue<boolean>(rawValues, Claim.HAS_HISTORY_FIELD_NAME);
            this.id = this.getValue<string>(rawValues, Claim.ID_FIELD_NAME);
            this.loss.setValues(rawValues.loss);
            this.modifiedAt = this.getValue<Date>(rawValues, Claim.MODIFIED_AT_FIELD_NAME);
            this.fillModelArray<IClaimant | IClaimee>(this, Claim.PARTY_ROLE_IN_CLAIM_FIELD_NAME, rawValues.partyRoleInClaim, Claimant, SubTypeFactory.createSubTypeInstance);
            this.stateGroupId = this.getValue<string>(rawValues, Claim.STATE_GROUP_ID_FIELD_NAME);
            this.transactionStatus = this.getValue<TransactionStatus>(rawValues, Claim.TRANSACTION_STATUS_FIELD_NAME);
            this.version = this.getValue<number>(rawValues, Claim.VERSION_FIELD_NAME);
        }
    }
}
