/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IChangeNotificationEntity, ChangeNotificationEntity } from './change-notification-entity.model';

export interface IChangeNotification {
    commandType?: string;
    connectionId?: string;
    entity?: IChangeNotificationEntity;
    userNickName?: string;
}


export class ChangeNotification extends BaseModel implements IChangeNotification  {

    static COMMAND_TYPE_FIELD_NAME = 'commandType';
    static CONNECTION_ID_FIELD_NAME = 'connectionId';
    static ENTITY_FIELD_NAME = 'entity';
    static USER_NICK_NAME_FIELD_NAME = 'userNickName';

    commandType: string;
    connectionId: string;
    entity: ChangeNotificationEntity;
    userNickName: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IChangeNotification>) {
        super();
        this.entity = new ChangeNotificationEntity(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IChangeNotification>): void {
        if (values) {
            
            const rawValues = values
            this.commandType = this.getValue<string>(rawValues, ChangeNotification.COMMAND_TYPE_FIELD_NAME);
            this.connectionId = this.getValue<string>(rawValues, ChangeNotification.CONNECTION_ID_FIELD_NAME);
            this.entity.setValues(rawValues.entity);
            this.userNickName = this.getValue<string>(rawValues, ChangeNotification.USER_NICK_NAME_FIELD_NAME);
        }
    }
}
