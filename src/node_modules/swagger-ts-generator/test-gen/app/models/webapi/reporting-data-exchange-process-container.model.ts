/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IProcessAction, ProcessAction } from './process-action.model';
import { IFileStore, FileStore } from './file-store.model';
import { IReportingDataExchange, ReportingDataExchange } from './reporting-data-exchange.model';

export interface IReportingDataExchangeProcessContainer {
    action?: IProcessAction;
    files?: Array<IFileStore>;
    process?: IReportingDataExchange;
}


export class ReportingDataExchangeProcessContainer extends BaseModel implements IReportingDataExchangeProcessContainer  {

    static ACTION_FIELD_NAME = 'action';
    static FILES_FIELD_NAME = 'files';
    static PROCESS_FIELD_NAME = 'process';

    action: ProcessAction;
    files: Array<FileStore>;
    process: ReportingDataExchange;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IReportingDataExchangeProcessContainer>) {
        super();
        this.action = new ProcessAction(); 
        this.files = new Array<FileStore>(); 
        this.process = new ReportingDataExchange(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IReportingDataExchangeProcessContainer>): void {
        if (values) {
            
            const rawValues = values
            this.action.setValues(rawValues.action);
            this.fillModelArray<IFileStore>(this, ReportingDataExchangeProcessContainer.FILES_FIELD_NAME, rawValues.files, FileStore, SubTypeFactory.createSubTypeInstance);
            this.process.setValues(rawValues.process);
        }
    }
}
