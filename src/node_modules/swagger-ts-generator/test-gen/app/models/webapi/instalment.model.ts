/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IMoney, Money } from './money.model';
import { IBoundedPeriod, BoundedPeriod } from './bounded-period.model';

export interface IInstalment {
    dueDate?: Date;
    grossAmount?: IMoney;
    id?: string;
    netAmount?: IMoney;
    paymentPeriod?: IBoundedPeriod;
    reimbursement?: boolean;
}


export class Instalment extends BaseModel implements IInstalment  {

    static DUE_DATE_FIELD_NAME = 'dueDate';
    static GROSS_AMOUNT_FIELD_NAME = 'grossAmount';
    static ID_FIELD_NAME = 'id';
    static NET_AMOUNT_FIELD_NAME = 'netAmount';
    static PAYMENT_PERIOD_FIELD_NAME = 'paymentPeriod';
    static REIMBURSEMENT_FIELD_NAME = 'reimbursement';

    dueDate: Date;
    grossAmount: Money;
    id: string;
    netAmount: Money;
    paymentPeriod: BoundedPeriod;
    reimbursement: boolean;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IInstalment>) {
        super();
        this.grossAmount = new Money(); 
        this.netAmount = new Money(); 
        this.paymentPeriod = new BoundedPeriod(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IInstalment>): void {
        if (values) {
            
            const rawValues = values
            this.dueDate = this.getValue<Date>(rawValues, Instalment.DUE_DATE_FIELD_NAME);
            this.grossAmount.setValues(rawValues.grossAmount);
            this.id = this.getValue<string>(rawValues, Instalment.ID_FIELD_NAME);
            this.netAmount.setValues(rawValues.netAmount);
            this.paymentPeriod.setValues(rawValues.paymentPeriod);
            this.reimbursement = this.getValue<boolean>(rawValues, Instalment.REIMBURSEMENT_FIELD_NAME);
        }
    }
}
