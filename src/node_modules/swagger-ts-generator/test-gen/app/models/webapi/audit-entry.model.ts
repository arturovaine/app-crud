/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


export interface IAuditEntry {
    brokerId?: string;
    cedentId?: string;
    companyName?: string;
    contractId?: string;
    contractVersion?: number;
    date?: Date;
    dueDate?: Date;
    insuranceServiceRequestId?: string;
    nextActionExpectedFrom?: string;
    reinsurerId?: string;
    username?: string;
    workflowAction?: string;
}


export class AuditEntry extends BaseModel implements IAuditEntry  {

    static BROKER_ID_FIELD_NAME = 'brokerId';
    static CEDENT_ID_FIELD_NAME = 'cedentId';
    static COMPANY_NAME_FIELD_NAME = 'companyName';
    static CONTRACT_ID_FIELD_NAME = 'contractId';
    static CONTRACT_VERSION_FIELD_NAME = 'contractVersion';
    static DATE_FIELD_NAME = 'date';
    static DUE_DATE_FIELD_NAME = 'dueDate';
    static INSURANCE_SERVICE_REQUEST_ID_FIELD_NAME = 'insuranceServiceRequestId';
    static NEXT_ACTION_EXPECTED_FROM_FIELD_NAME = 'nextActionExpectedFrom';
    static REINSURER_ID_FIELD_NAME = 'reinsurerId';
    static USERNAME_FIELD_NAME = 'username';
    static WORKFLOW_ACTION_FIELD_NAME = 'workflowAction';

    brokerId: string;
    cedentId: string;
    companyName: string;
    contractId: string;
    contractVersion: number;
    date: Date;
    dueDate: Date;
    insuranceServiceRequestId: string;
    nextActionExpectedFrom: string;
    reinsurerId: string;
    username: string;
    workflowAction: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IAuditEntry>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IAuditEntry>): void {
        if (values) {
            
            const rawValues = values
            this.brokerId = this.getValue<string>(rawValues, AuditEntry.BROKER_ID_FIELD_NAME);
            this.cedentId = this.getValue<string>(rawValues, AuditEntry.CEDENT_ID_FIELD_NAME);
            this.companyName = this.getValue<string>(rawValues, AuditEntry.COMPANY_NAME_FIELD_NAME);
            this.contractId = this.getValue<string>(rawValues, AuditEntry.CONTRACT_ID_FIELD_NAME);
            this.contractVersion = this.getValue<number>(rawValues, AuditEntry.CONTRACT_VERSION_FIELD_NAME);
            this.date = this.getValue<Date>(rawValues, AuditEntry.DATE_FIELD_NAME);
            this.dueDate = this.getValue<Date>(rawValues, AuditEntry.DUE_DATE_FIELD_NAME);
            this.insuranceServiceRequestId = this.getValue<string>(rawValues, AuditEntry.INSURANCE_SERVICE_REQUEST_ID_FIELD_NAME);
            this.nextActionExpectedFrom = this.getValue<string>(rawValues, AuditEntry.NEXT_ACTION_EXPECTED_FROM_FIELD_NAME);
            this.reinsurerId = this.getValue<string>(rawValues, AuditEntry.REINSURER_ID_FIELD_NAME);
            this.username = this.getValue<string>(rawValues, AuditEntry.USERNAME_FIELD_NAME);
            this.workflowAction = this.getValue<string>(rawValues, AuditEntry.WORKFLOW_ACTION_FIELD_NAME);
        }
    }
}
