/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { ILossTerm, LossTerm } from './loss-term.model';
import { IMoney, Money } from './money.model';

export interface ICashCallTerms extends ILossTerm{
    minimumLossAmount?: IMoney;
    minimumLossRate?: string;
    daysToPay?: number;
}


export class CashCallTerms extends LossTerm implements ICashCallTerms  {
    static TYPE_SELECTOR = 'CashCallTerms';

    static MINIMUM_LOSS_AMOUNT_FIELD_NAME = 'minimumLossAmount';
    static MINIMUM_LOSS_RATE_FIELD_NAME = 'minimumLossRate';
    static DAYS_TO_PAY_FIELD_NAME = 'daysToPay';

    minimumLossAmount: Money;
    minimumLossRate: string;
    daysToPay: number;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<ICashCallTerms>) {
        super();

        this.typeSelector = CashCallTerms.TYPE_SELECTOR;
        this.minimumLossAmount = new Money(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<ICashCallTerms>): void {
        if (values) {
            super.setValues(values)
            const rawValues = values
            this.minimumLossAmount.setValues(rawValues.minimumLossAmount);
            this.minimumLossRate = this.getValue<string>(rawValues, CashCallTerms.MINIMUM_LOSS_RATE_FIELD_NAME);
            this.daysToPay = this.getValue<number>(rawValues, CashCallTerms.DAYS_TO_PAY_FIELD_NAME);
        }
    }
}
