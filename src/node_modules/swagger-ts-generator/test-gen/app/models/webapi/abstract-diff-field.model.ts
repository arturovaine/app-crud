/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { AuditDiffEntryType } from './enums';

export interface IAbstractDiffField {
    type?: AuditDiffEntryType;
    typeSelector?: string;
}


export class AbstractDiffField extends BaseModel implements IAbstractDiffField  {
    static TYPE_SELECTOR = 'AbstractDiffField';

    static TYPE_FIELD_NAME = 'type';
    static TYPE_SELECTOR_FIELD_NAME = 'typeSelector';

    type: AuditDiffEntryType;
    typeSelector: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IAbstractDiffField>) {
        super();

        this.typeSelector = AbstractDiffField.TYPE_SELECTOR;

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IAbstractDiffField>): void {
        if (values) {
            
            const rawValues = values
            this.type = this.getValue<AuditDiffEntryType>(rawValues, AbstractDiffField.TYPE_FIELD_NAME);
            this.typeSelector = this.getValue<string>(rawValues, AbstractDiffField.TYPE_SELECTOR_FIELD_NAME);
        }
    }
}
