/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IBomReinsuranceClause, BomReinsuranceClause } from './bom-reinsurance-clause.model';
import { IBomBoundedPeriod, BomBoundedPeriod } from './bom-bounded-period.model';
import { IBomReinsuranceCoverage, BomReinsuranceCoverage } from './bom-reinsurance-coverage.model';
import { IMoney, Money } from './money.model';

export interface IBomBaseReinsuranceSection {
    clauses?: Array<IBomReinsuranceClause>;
    description?: string;
    effectivePeriod?: IBomBoundedPeriod;
    excludedCoverages?: Array<IBomReinsuranceCoverage>;
    id?: string;
    includedCoverages?: Array<IBomReinsuranceCoverage>;
    minimumLinePercentage?: string;
    name: string;
    signedLineAmount?: IMoney;
    signedLinePercentage?: string;
    subjectivities?: Array<IBomReinsuranceClause>;
    typeSelector?: string;
    writtenLineAmount?: IMoney;
    writtenLinePercentage?: string;
}


export class BomBaseReinsuranceSection extends BaseModel implements IBomBaseReinsuranceSection  {
    static TYPE_SELECTOR = 'BomBaseReinsuranceSection';

    static CLAUSES_FIELD_NAME = 'clauses';
    static DESCRIPTION_FIELD_NAME = 'description';
    static EFFECTIVE_PERIOD_FIELD_NAME = 'effectivePeriod';
    static EXCLUDED_COVERAGES_FIELD_NAME = 'excludedCoverages';
    static ID_FIELD_NAME = 'id';
    static INCLUDED_COVERAGES_FIELD_NAME = 'includedCoverages';
    static MINIMUM_LINE_PERCENTAGE_FIELD_NAME = 'minimumLinePercentage';
    static NAME_FIELD_NAME = 'name';
    static SIGNED_LINE_AMOUNT_FIELD_NAME = 'signedLineAmount';
    static SIGNED_LINE_PERCENTAGE_FIELD_NAME = 'signedLinePercentage';
    static SUBJECTIVITIES_FIELD_NAME = 'subjectivities';
    static TYPE_SELECTOR_FIELD_NAME = 'typeSelector';
    static WRITTEN_LINE_AMOUNT_FIELD_NAME = 'writtenLineAmount';
    static WRITTEN_LINE_PERCENTAGE_FIELD_NAME = 'writtenLinePercentage';

    clauses: Array<BomReinsuranceClause>;
    description: string;
    effectivePeriod: BomBoundedPeriod;
    excludedCoverages: Array<BomReinsuranceCoverage>;
    id: string;
    includedCoverages: Array<BomReinsuranceCoverage>;
    minimumLinePercentage: string;
    name: string;
    signedLineAmount: Money;
    signedLinePercentage: string;
    subjectivities: Array<BomReinsuranceClause>;
    typeSelector: string;
    writtenLineAmount: Money;
    writtenLinePercentage: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IBomBaseReinsuranceSection>) {
        super();

        this.typeSelector = BomBaseReinsuranceSection.TYPE_SELECTOR;
        this.clauses = new Array<BomReinsuranceClause>(); 
        this.effectivePeriod = new BomBoundedPeriod(); 
        this.excludedCoverages = new Array<BomReinsuranceCoverage>(); 
        this.includedCoverages = new Array<BomReinsuranceCoverage>(); 
        this.signedLineAmount = new Money(); 
        this.subjectivities = new Array<BomReinsuranceClause>(); 
        this.writtenLineAmount = new Money(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IBomBaseReinsuranceSection>): void {
        if (values) {
            
            const rawValues = values
            this.fillModelArray<IBomReinsuranceClause>(this, BomBaseReinsuranceSection.CLAUSES_FIELD_NAME, rawValues.clauses, BomReinsuranceClause, SubTypeFactory.createSubTypeInstance);
            this.description = this.getValue<string>(rawValues, BomBaseReinsuranceSection.DESCRIPTION_FIELD_NAME);
            this.effectivePeriod.setValues(rawValues.effectivePeriod);
            this.fillModelArray<IBomReinsuranceCoverage>(this, BomBaseReinsuranceSection.EXCLUDED_COVERAGES_FIELD_NAME, rawValues.excludedCoverages, BomReinsuranceCoverage, SubTypeFactory.createSubTypeInstance);
            this.id = this.getValue<string>(rawValues, BomBaseReinsuranceSection.ID_FIELD_NAME);
            this.fillModelArray<IBomReinsuranceCoverage>(this, BomBaseReinsuranceSection.INCLUDED_COVERAGES_FIELD_NAME, rawValues.includedCoverages, BomReinsuranceCoverage, SubTypeFactory.createSubTypeInstance);
            this.minimumLinePercentage = this.getValue<string>(rawValues, BomBaseReinsuranceSection.MINIMUM_LINE_PERCENTAGE_FIELD_NAME);
            this.name = this.getValue<string>(rawValues, BomBaseReinsuranceSection.NAME_FIELD_NAME);
            this.signedLineAmount.setValues(rawValues.signedLineAmount);
            this.signedLinePercentage = this.getValue<string>(rawValues, BomBaseReinsuranceSection.SIGNED_LINE_PERCENTAGE_FIELD_NAME);
            this.fillModelArray<IBomReinsuranceClause>(this, BomBaseReinsuranceSection.SUBJECTIVITIES_FIELD_NAME, rawValues.subjectivities, BomReinsuranceClause, SubTypeFactory.createSubTypeInstance);
            this.typeSelector = this.getValue<string>(rawValues, BomBaseReinsuranceSection.TYPE_SELECTOR_FIELD_NAME);
            this.writtenLineAmount.setValues(rawValues.writtenLineAmount);
            this.writtenLinePercentage = this.getValue<string>(rawValues, BomBaseReinsuranceSection.WRITTEN_LINE_PERCENTAGE_FIELD_NAME);
        }
    }
}
