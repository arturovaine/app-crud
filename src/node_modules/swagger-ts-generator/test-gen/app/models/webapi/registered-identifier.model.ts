/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { RegisteredIdentityType } from './enums';

export interface IRegisteredIdentifier {
    identifier?: string;
    registrationAuthority?: string;
    type?: RegisteredIdentityType;
}


export class RegisteredIdentifier extends BaseModel implements IRegisteredIdentifier  {

    static IDENTIFIER_FIELD_NAME = 'identifier';
    static REGISTRATION_AUTHORITY_FIELD_NAME = 'registrationAuthority';
    static TYPE_FIELD_NAME = 'type';

    identifier: string;
    registrationAuthority: string;
    type: RegisteredIdentityType;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IRegisteredIdentifier>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IRegisteredIdentifier>): void {
        if (values) {
            
            const rawValues = values
            this.identifier = this.getValue<string>(rawValues, RegisteredIdentifier.IDENTIFIER_FIELD_NAME);
            this.registrationAuthority = this.getValue<string>(rawValues, RegisteredIdentifier.REGISTRATION_AUTHORITY_FIELD_NAME);
            this.type = this.getValue<RegisteredIdentityType>(rawValues, RegisteredIdentifier.TYPE_FIELD_NAME);
        }
    }
}
