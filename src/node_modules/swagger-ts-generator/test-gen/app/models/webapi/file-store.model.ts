/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


export interface IFileStore {
    createdAt?: Date;
    fileContent?: string;
    fileId?: string;
    fileName?: string;
    id?: string;
    version?: number;
}


export class FileStore extends BaseModel implements IFileStore  {

    static CREATED_AT_FIELD_NAME = 'createdAt';
    static FILE_CONTENT_FIELD_NAME = 'fileContent';
    static FILE_ID_FIELD_NAME = 'fileId';
    static FILE_NAME_FIELD_NAME = 'fileName';
    static ID_FIELD_NAME = 'id';
    static VERSION_FIELD_NAME = 'version';

    createdAt: Date;
    fileContent: string;
    fileId: string;
    fileName: string;
    id: string;
    version: number;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IFileStore>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IFileStore>): void {
        if (values) {
            
            const rawValues = values
            this.createdAt = this.getValue<Date>(rawValues, FileStore.CREATED_AT_FIELD_NAME);
            this.fileContent = this.getValue<string>(rawValues, FileStore.FILE_CONTENT_FIELD_NAME);
            this.fileId = this.getValue<string>(rawValues, FileStore.FILE_ID_FIELD_NAME);
            this.fileName = this.getValue<string>(rawValues, FileStore.FILE_NAME_FIELD_NAME);
            this.id = this.getValue<string>(rawValues, FileStore.ID_FIELD_NAME);
            this.version = this.getValue<number>(rawValues, FileStore.VERSION_FIELD_NAME);
        }
    }
}
