/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { IMoney, Money } from './money.model';
import { IClause, Clause } from './clause.model';
import { ICustomClause, CustomClause } from './custom-clause.model';
import { IPredefinedClause, PredefinedClause } from './predefined-clause.model';
import { IReinstatement, Reinstatement } from './reinstatement.model';

export interface IReinstatementPlan {
    calculationBasis?: IMoney;
    clauses?: Array<IClause | ICustomClause | IPredefinedClause>;
    id?: string;
    reinstatements?: Array<IReinstatement>;
}


export class ReinstatementPlan extends BaseModel implements IReinstatementPlan  {

    static CALCULATION_BASIS_FIELD_NAME = 'calculationBasis';
    static CLAUSES_FIELD_NAME = 'clauses';
    static ID_FIELD_NAME = 'id';
    static REINSTATEMENTS_FIELD_NAME = 'reinstatements';

    calculationBasis: Money;
    clauses: Array<Clause | CustomClause | PredefinedClause>;
    id: string;
    reinstatements: Array<Reinstatement>;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IReinstatementPlan>) {
        super();
        this.calculationBasis = new Money(); 
        this.clauses = new Array<Clause | CustomClause | PredefinedClause>(); 
        this.reinstatements = new Array<Reinstatement>(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IReinstatementPlan>): void {
        if (values) {
            
            const rawValues = values
            this.calculationBasis.setValues(rawValues.calculationBasis);
            this.fillModelArray<IClause | ICustomClause | IPredefinedClause>(this, ReinstatementPlan.CLAUSES_FIELD_NAME, rawValues.clauses, Clause, SubTypeFactory.createSubTypeInstance);
            this.id = this.getValue<string>(rawValues, ReinstatementPlan.ID_FIELD_NAME);
            this.fillModelArray<IReinstatement>(this, ReinstatementPlan.REINSTATEMENTS_FIELD_NAME, rawValues.reinstatements, Reinstatement, SubTypeFactory.createSubTypeInstance);
        }
    }
}
