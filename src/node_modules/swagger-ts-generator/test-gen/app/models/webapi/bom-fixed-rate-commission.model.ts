/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';


export interface IBomFixedRateCommission {
    fixedCedingCommissionPercentage?: string;
    lossAdjustmentExpensesPercentage?: string;
    profitCommissionPercentage?: string;
}


export class BomFixedRateCommission extends BaseModel implements IBomFixedRateCommission  {

    static FIXED_CEDING_COMMISSION_PERCENTAGE_FIELD_NAME = 'fixedCedingCommissionPercentage';
    static LOSS_ADJUSTMENT_EXPENSES_PERCENTAGE_FIELD_NAME = 'lossAdjustmentExpensesPercentage';
    static PROFIT_COMMISSION_PERCENTAGE_FIELD_NAME = 'profitCommissionPercentage';

    fixedCedingCommissionPercentage: string;
    lossAdjustmentExpensesPercentage: string;
    profitCommissionPercentage: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IBomFixedRateCommission>) {
        super();

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IBomFixedRateCommission>): void {
        if (values) {
            
            const rawValues = values
            this.fixedCedingCommissionPercentage = this.getValue<string>(rawValues, BomFixedRateCommission.FIXED_CEDING_COMMISSION_PERCENTAGE_FIELD_NAME);
            this.lossAdjustmentExpensesPercentage = this.getValue<string>(rawValues, BomFixedRateCommission.LOSS_ADJUSTMENT_EXPENSES_PERCENTAGE_FIELD_NAME);
            this.profitCommissionPercentage = this.getValue<string>(rawValues, BomFixedRateCommission.PROFIT_COMMISSION_PERCENTAGE_FIELD_NAME);
        }
    }
}
