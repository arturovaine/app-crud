/**
 * This file is generated by the SwaggerTSGenerator.
 * Do not edit.
*/
/* tslint:disable */
import { BaseModel } from './base-model';
import { SubTypeFactory } from './sub-type-factory';

import { ISoftReference, SoftReference } from './soft-reference.model';

export interface IPartyRoleInClaim {
    party?: ISoftReference;
    typeSelector?: string;
}


export class PartyRoleInClaim extends BaseModel implements IPartyRoleInClaim  {
    static TYPE_SELECTOR = 'PartyRoleInClaim';

    static PARTY_FIELD_NAME = 'party';
    static TYPE_SELECTOR_FIELD_NAME = 'typeSelector';

    party: SoftReference;
    typeSelector: string;

    /**
     * constructor
     * @param values Can be used to set a webapi response or formValues to this newly constructed model
    */
    constructor(values?: Partial<IPartyRoleInClaim>) {
        super();

        this.typeSelector = PartyRoleInClaim.TYPE_SELECTOR;
        this.party = new SoftReference(); 

        if (values) {
            this.setValues(values);
        }
    }

    /**
     * set the values.
     * @param values Can be used to set a webapi response to this newly constructed model
    */
    setValues(values: Partial<IPartyRoleInClaim>): void {
        if (values) {
            
            const rawValues = values
            this.party.setValues(rawValues.party);
            this.typeSelector = this.getValue<string>(rawValues, PartyRoleInClaim.TYPE_SELECTOR_FIELD_NAME);
        }
    }
}
